import telebot
import os
from botrequests.lowprice import lowprice
from botrequests import query
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("TOKEN")
API_KEY = os.getenv('x-rapidapi-key')
bot = telebot.TeleBot(TOKEN)
TEMP_DICT = {'city_of_destination': 0, "id": 0, 'num': 0, 'num_of_photos': 0}
COMMANDS = {
    "/lowprice": "lowprice",
    "/highprice": "highprice",
    "/bestdeal": "bestdeal",
    "/history": "history"
}


def show_variants(variants, user_id):
    bot.send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ —è –Ω–∞—à–µ–ª:")
    data = ""
    for variant in variants:
        for key in variant.keys():
            if variant[key] is not None:
                data+=str(key)
                data+=" "
                data+=str(variant[key])
        data+="\n"
    bot.send_message(user_id, data)


def get_city(message):

    TEMP_DICT['city_of_destination'] = message.text
    TEMP_DICT['id'] = message.from_user.id
    bot.send_message(message.from_user.id, "–ö—Ä—É—Ç–æ! –°–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç–µ–±–µ –ø–æ–∫–∞–∑–∞—Ç—å?")
    bot.register_next_step_handler(message, get_num)


def get_num(message):
    try:
        TEMP_DICT['num'] = int(message.text)
        if TEMP_DICT['num'] <= 0:
            raise Exception
        bot.send_message(message.from_user.id, "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –£–∂–µ –ø—Ä–æ–±–∏–≤–∞—é –ø–æ –±–∞–∑–∞–º. –ù—É–∂–Ω—ã –ª–∏ —Ç–µ–±–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏? –î–∞/–Ω–µ—Ç")
        bot.register_next_step_handler(message, get_photos)
    except ValueError:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª(")
    except Exception:
        pass


def get_photos(message):
    are_photos_needed = message.text.lower()
    if are_photos_needed == '–¥–∞':
        bot.send_message(message.from_user.id, "–û—Ç–ª–∏—á–Ω–æ! –°–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ç–µ–±–µ –Ω—É–∂–Ω–æ?")
        bot.register_next_step_handler(message, get_num_of_photos)
    elif are_photos_needed == '–Ω–µ—Ç':
        bot.send_message(message.from_user.id, "–û–∫–µ–π, —Ä–∞–±–æ—Ç–∞—é!")
        TEMP_DICT['num_of_photos'] = 0
        answer = lowprice(TEMP_DICT)
        if isinstance(answer, Exception):
            bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            show_variants(answer, message.from_user.id)
    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª(")


def get_num_of_photos(message):
    num_of_photos = message.text
    try:
        TEMP_DICT['num_of_photos'] = int(num_of_photos)
        bot.send_message(message.from_user.id, "–ü–æ–Ω—è–ª, —Ä–∞–±–æ—Ç–∞—é...")
        get_full_answer()
        answer = lowprice(TEMP_DICT)
        if isinstance(answer, Exception):
            bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            show_variants(answer, message.from_user.id)

    except ValueError:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é...")


@bot.message_handler(commands=["start", "lowprice", "highprice", "bestdeal", "history"])
def get_text_message(message):
    if message.text == '/start':
        bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!ü§ó\n\n"
                                               f"–ú–µ–Ω—è –∑–æ–≤—É—Ç {bot.get_me().first_name},"
                                               f" –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–µ–ª—å –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º —Ç–µ–±—è –≥–æ—Ä–æ–¥–µ!\n\n"
                                               f"–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ /help")
    elif message.text in ["/lowprice", "/highprice", "/bestdeal"]:
        bot.send_message(message.from_user.id, f"–ö–ª–∞—Å—Å, —Ç–µ–ø–µ—Ä—å"
                                               f" –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞,"
                                               f" –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–µ–ª—å.\n–ù–∞–ø—Ä–∏–º–µ—Ä, –ú–∏–Ω—Å–∫")
    elif message.text == '/history':
        pass
    # command = COMMANDS.get(message.text)
    bot.register_next_step_handler(message, get_city)



@bot.message_handler(content_types=["text"])
def hello(message):
    if message.text in ["–ü—Ä–∏–≤–µ—Ç", "/hello_world"]:
        bot.send_message(message.from_user.id, "–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç!")
    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é!")


if __name__ == '__main__':
    bot.polling(none_stop=True)
